[tox]
envlist = py35,py27,pep8
minversion = 1.8
skipsdist = True

[testenv]
setenv =
  VIRTUAL_ENV={envdir}
usedevelop = True
install_command = pip install {opts} {packages}
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       -egit+https://git.openstack.org/openstack/neutron#egg=neutron
       -rhttps://git.openstack.org/cgit/openstack/neutron/plain/test-requirements.txt
whitelist_externals = bash
commands =
  bash tools/pretty_tox.sh '{posargs}'

[testenv:pep8]
basepython = python3
commands = flake8

[testenv:cover]
basepython = python3
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source networking_powervm --parallel-mode
commands =
  coverage erase
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml
  coverage report

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
commands = python setup.py build_sphinx

[testenv:bashate]
basepython = python3
commands =
  bash -c "ls devstack/*.sh | xargs bashate -v {posargs}"
whitelist_externals = bash

[flake8]
# N530 direct neutron imports not allowed
ignore = N530
enable-extensions = H106,H203,H204,H205,H904
show-source = true
exclude = ./.*,build,dist,doc
import-order-style = pep8

[hacking]
local-check-factory = networking_powervm.hacking.checks.factory

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
  -egit+https://git.openstack.org/openstack/neutron#egg=neutron
  -rhttps://git.openstack.org/cgit/openstack/neutron/plain/test-requirements.txt
